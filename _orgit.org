Hello World!

* The Information Mycelium
:PROPERTIES:
:CLOCK_LAST: [2021-01-29 Fr 00:31]
:END:
:LOGBOOK:
CLOCK: [2021-01-29 Fr 00:22]--[2021-01-29 Fr 00:31] =>  0:09
:END:
We now must revolutionize social media.

We simply must do it,
and by simple means.

You and I
we start today.

We have long learned most we need:
Writing, and consolidating information.

We need not to wait.

We need no new platforms,
we need to decentrally distribute.
We have all we need to write our message.
Why not start today?

We need to learn new habits and some essential tools.


This is the first streaming of my working with
1. information: notes, texts and
2. collaborative decentral versioning.

You might want to learn the software I use (recommended).
All open source!
- emacs :: the mother of all editors (MOAE, optional!!! powerful!!! Tough cookie though)
  alternatively any text editor will do...
  (request tutorials? Notepad++, Atom)
- orgmode :: is the markup format you see me writing here.
- git :: decentral versioning and collaborative text editing.

Before we look into the ideas of the mycelium, let me explain and show git a bit ;-)

* Requirements for the Information Mycelium
** Git
:PROPERTIES:
:CLOCK_LAST: [2021-01-26 Di 12:30]
:END:
:LOGBOOK:
CLOCK: [2021-01-20 Mi 12:44]--[2021-01-26 Di 12:30] => 143:46
:END:
Standing on the shoulders of giant Linus Torvalds.
Git is a software that can integrate the collaboration of thousands of authors.
- with moderation
- with signatures

Git is well established.

*** =git init= to create a new repository
:PROPERTIES:
:CLOCK_LAST: [2021-01-26 Di 12:38]
:END:
:LOGBOOK:
CLOCK: [2021-01-26 Di 12:35]--[2021-01-26 Di 12:38] =>  0:03
CLOCK: [2021-01-26 Di 12:30]--[2021-01-26 Di 12:33] =>  0:03
:END:
#+begin_src sh
git init
#+end_src

#+results:
:results:
Initialized empty Git repository in /home/gregor/dev/julia/OrGitBot/repositories/InformationMycelium/.git/
:end:

what the f*ck happened?
**** Controling computers with language happened
:PROPERTIES:
:CLOCK_LAST: [2021-01-26 Di 12:35]
:END:
:LOGBOOK:
CLOCK: [2021-01-26 Di 12:33]--[2021-01-26 Di 12:35] =>  0:02
:END:
If you know only Windows, you are used to control you computer with the mouse.
Eben Moglen (great guy!!): mouse = "the caveman interface: you point and you grunt"
I think Eben is dishonoring our caveman ancestors - otherwise Eben is spot on!
mouse = "the infant interface: you point and you grunt!"

Calm down and relax. Controling with text is a journey you are invited to - but it is not a requirement.
It is my way to work.
It is a way for many people loving language, and formal languages...

I will record my introductions and tutorials on the information mycelium using my software.
Maybe it will be inspiration to learn emacs, maybe not.
Emacs is not a requirement!
(but it allows these fancy things like collapsing headlines ;-))
*** =git add= and =git commit=
:PROPERTIES:
:CLOCK_LAST: [2021-01-28 Do 23:48]
:END:
:LOGBOOK:
CLOCK: [2021-01-26 Di 12:38]--[2021-01-28 Do 23:48] => 59:10
:END:
I use Magit (emacs again): not a requirement, but just lovely.

What the F*ck happened?
- we staged changes (this file and the =.gitignore= file for ignoring emacs backup files)
  Staging files can be done without magit in the terminal:
  #+begin_src sh
  git add _orgit.org
  #+end_src
- we committed changes with a comment (an initial version)
  In the terminal:
  #+begin_src sh
  git commit -m "a note describing the changes"
  #+end_src
- We looked at the log of this "commit"

As long as you work on your own that is all you need to know.
* =git clone= repositories
:PROPERTIES:
:CLOCK_LAST: [2021-01-29 Fr 18:45]
:END:
:LOGBOOK:
CLOCK: [2021-01-29 Fr 18:34]--[2021-01-29 Fr 18:45] =>  0:11
:END:
There are many ways to publish your content for collaboration.
Let's first look at something simple for starters, something established and convenient:
** https://GitHub.com
:PROPERTIES:
:CLOCK_LAST: [2021-01-29 Fr 18:56]
:END:
:LOGBOOK:
CLOCK: [2021-01-29 Fr 18:45]--[2021-01-29 Fr 18:56] =>  0:11
:END:
is *the* central place for many git repositories - with a long history (today developed & owned by microsoft).
Most github repositories are programming - but never mind.

(this is literate shell programming:)
#+begin_src sh
git remote add origin git@github.com:gkappler/InformationMycelium.git
git branch -M main
git push -u origin main
#+end_src

#+results:
:results:
Branch 'main' set up to track remote branch 'main' from 'origin'.
:end:

So, it is this easy to publish your text files with emacs.
Well "publish" on GitHub as a repository, crude and ugly.

We will go further and pretty, I do hope!
Together, I do hope!

Let me conclude and repeat what we learned --
and publish the text of this brief tutorial.
* [[https://orgmode.org][org mode]]
:PROPERTIES:
:CLOCK_LAST: [2021-01-29 Fr 19:19]
:END:
:LOGBOOK:
CLOCK: [2021-01-29 Fr 19:16]--[2021-01-29 Fr 19:19] =>  0:03
CLOCK: [2021-01-29 Fr 19:10]--[2021-01-29 Fr 19:12] =>  0:02
CLOCK: [2021-01-29 Fr 18:56]--[2021-01-29 Fr 19:06] =>  0:10
:END:
your life in plain text.

I started using org in about 2009.
I never left again.
Wrote
- my private notes & plans
- scientific papers
- slides
- mails

I got addicted, and needed to learn how to consciously forget.
Now I hope I can share my love.

Org changed my writing.
It helped me focus.
** Org influenced my view on texts as a forest:
*** org started as a better outline mode by [[http://google.at/?q=Carsten Dominik&hl=en&as_vis=1&as_sdt=2001&as_sdtp=on][Carsten Dominik]].
And so it is no surprise org is powerful for mathematics, and programming and science.

*** outline means sub-headlines
*** A file forms a tree of sections/headlines
*** A forest consists of many trees
and all the life that lives on and between those trees.

** Org allows to markup and format
:PROPERTIES:
:CLOCK_LAST: [2021-01-29 Fr 19:16]
:END:
:LOGBOOK:
CLOCK: [2021-01-29 Fr 19:12]--[2021-01-29 Fr 19:16] =>  0:04
CLOCK: [2021-01-29 Fr 19:06]--[2021-01-29 Fr 19:10] =>  0:04
:END:
/italics/, *bold*, =code=
# comments (not printed when published)
: # escapes as a code line (printed when published)

Of course
1. lists
2. with enumations
3. and sublists
   - too
   - with just dashes

You really can write nearly everything in org.
But you will need emacs for a full experience.

** TODO lists
can mark what needs doing.
*** DONE And record what has been done.
*** TODO [#A] with prio
*** TODO with a date
SCHEDULED: <2021-01-29 Fr>
*** TODO with a deadline
DEADLINE: <2021-01-29 Fr>
** org forest
:LOGBOOK:
CLOCK: [2021-01-29 Fr 19:19]
:END:
With org and git, a huge forest of texts is formally defined.
This forest is shared between us, and can be used for organizing basically anything as a group.

It is all text, right?
It is all sequences of symbols.

Text can be collaboratively written with =git=.
And shared on github.

*** by path
: <git repository url>/<folder path...>/<file name>/<* headline tree...>
Such a path can be found (if it exists).
[[id:9fc8f4c5-8543-40aa-bdbf-5b00f14b7fac][by org link id]]

: git@github.com:gkappler/InformationMycelium.git:/_orgit.org/[[https://orgmode.org][org mode]]/org forest/by path

Formally ok, but obviously fragile.
*** by org link id
:PROPERTIES:
:ID:       9fc8f4c5-8543-40aa-bdbf-5b00f14b7fac
:END:
: git@github.com:gkappler/InformationMycelium.git:/id:9fc8f4c5-8543-40aa-bdbf-5b00f14b7fac
will reference the location even when the outline position moved.

Formally ok, and sometimes also fragile (duplicates).
